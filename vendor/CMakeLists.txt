set(vendor_folder "Vendor")

if(NOT TARGET glfw)
    option(GLFW_BUILD_EXAMPLES "" OFF)
    option(GLFW_BUILD_TESTS "" OFF)
    option(GLFW_BUILD_DOCS "" OFF)
    option(GLFW_INSTALL "" OFF)
    add_subdirectory(glfw)
    set_target_properties(glfw PROPERTIES FOLDER ${vendor_folder}/glfw)
    set_target_properties(update_mappings PROPERTIES FOLDER ${vendor_folder}/glfw)
    # set_target_properties(uninstall PROPERTIES FOLDER ${vendor_folder}/glfw)
endif()

if(NOT TARGET imgui)
    include(imgui.cmake)
    set_target_properties(imgui PROPERTIES FOLDER ${vendor_folder}/imgui)
endif()

if(NOT TARGET stb)
    include(stb.cmake)
    set_target_properties(stb PROPERTIES FOLDER ${vendor_folder}/stb)
endif()

if(NOT TARGET glm)
    add_subdirectory(glm)
    set_target_properties(glm PROPERTIES FOLDER ${vendor_folder}/glm)
endif()

if (NOT TARGET spdlog)
    add_subdirectory(spdlog)
    set_target_properties(spdlog PROPERTIES FOLDER ${vendor_folder}/spdlog)
endif()

if (NOT TARGET entt)
    add_subdirectory(entt)
    set_target_properties(EnTT PROPERTIES FOLDER ${vendor_folder}/entt)
endif()

if (NOT TARGET assimp)
    add_subdirectory(assimp)
    if (MSVC)
        # This should be enough, but unfortunately
        # \WX flag is enabled on another place as well
        # option(ASSIMP_WARNINGS_AS_ERRORS "Treat all warnings as errors." OFF)
        set(CUSTOM_ASSIMP_DEBUG_OPTIONS /WX-)
        set(CUSTOM_ASSIMP_RELEASE_OPTIONS /WX-)
        target_compile_options(assimp PRIVATE "$<$<CONFIG:DEBUG>:${CUSTOM_ASSIMP_DEBUG_OPTIONS}>")
        target_compile_options(assimp PRIVATE "$<$<CONFIG:RELEASE>:${CUSTOM_ASSIMP_RELEASE_OPTIONS}>")
    elseif(XCODE)
        # IFCLoader failed with implicit conversation warning (treated as error)
        set_target_properties(assimp PROPERTIES XCODE_ATTRIBUTE_GCC_WARN_64_TO_32_BIT_CONVERSION NO)
    else()
        set_property(TARGET assimp PROPERTY CMAKE_COMPILE_WARNING_AS_ERROR OFF)
    endif()
    option(ASSIMP_WARNINGS_AS_ERRORS "Treat all warnings as errors." OFF)
    set_target_properties(assimp PROPERTIES FOLDER ${vendor_folder}/assimp)
endif()

if(NOT TARGET ImGuizmo)
    include(imguizmo.cmake)
    set_target_properties(ImGuizmo PROPERTIES FOLDER ${vendor_folder}/imguizmo)
endif()
